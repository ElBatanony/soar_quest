{
	// Place your soar_quest workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"New Screen Template": {
		"scope": "dart",
		"prefix": "screen",
		"body": [
			"class $1 extends Screen {",
			"\t$1(String title, {Key? key}) : super(title, key: key);",
			"",
			"\t@override",
			"\tState<$1> createState() => _$1State();",
			"}",
			"",
			"class _$1State extends State<$1> {",
			"\t@override",
			"\tWidget build(BuildContext context) {",
			"\t\treturn Scaffold(",
			"\t\t\tappBar: AppBar(title: Text(widget.title)),",
			"\t\t\tbody: Center(child: Text('${widget.title} Screen'),),",
			"\t\t);",
			"\t}",
			"}"
		],
		"description": "Creates a template for a new screen"
	},
	"New Collection Screen": {
		"scope": "dart",
		"prefix": "collectionScreen",
		"body": [
			"class $1 extends CollectionScreen {",
			"  $1({super.title, required super.collection, super.key});",
			"",
			"  @override",
			"  State<$1> createState() => _$1State();",
			"}",
			"",
			"class _$1State extends CollectionScreenState<$1> {",
			"",
			"  @override",
			"  Widget screenBody(BuildContext context) {",
			"    // TODO: implement screenBody for $1",
			"    return super.screenBody(context);",
			"  }",
			"}"
		],
	},
	"New Doc Screen": {
		"scope": "dart",
		"prefix": "docScreen",
		"body": [
			"class $1 extends DocScreen {",
			"  $1(super.doc,{super.key});",
			"",
			"  @override",
			"  State<$1> createState() => _$1State();",
			"}",
			"",
			"class _$1State extends DocScreenState<$1> {",
			"  @override",
			"  Widget screenBody(BuildContext context) {",
			"    // TODO: implement screenBody for $1",
			"    return super.screenBody(context);",
			"  }",
			"}"
		],
	},
	"New SQ App": {
		"scope": "dart",
		"prefix": "sqapp",
		"body": [
			"App $1 =",
			"    App(\"$1\", firebaseOptions: DefaultFirebaseOptions.currentPlatform);",
			"",
			"await $1.init();",
			"",
			"SQCollection sampleCollection = FirestoreCollection(",
			"    id: \"Sample Collection\", fields: [SQStringField(\"Name\")]);",
			"",
			"$1.run(MainScreen([",
			"  CollectionScreen(collection: sampleCollection),",
			"]));"
		],
	},
	"New SQFormField": {
		"scope": "dart",
		"prefix": "sqformfield",
		"body": [
			"class _SQ$1FormField extends SQFormField<SQ$1Field> {",
			"  const _SQ$1FormField(super.field, {required super.onChanged, super.doc});",
			"",
			"  @override",
			"  createState() => _SQ$1FormFieldState();",
			"}",
			"",
			"class _SQ$1FormFieldState extends SQFormFieldState<SQ$1Field> {",
			"  @override",
			"  Widget fieldBuilder(BuildContext context) {",
			"    return Text(\"SQ$1FormField\");",
			"  }",
			"}",
		],
	}
}